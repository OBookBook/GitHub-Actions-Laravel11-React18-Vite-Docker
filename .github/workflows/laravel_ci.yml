name: Laravel CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy .env
        run: |
          cp api/.env.example api/.env
          echo "DB_HOST=127.0.0.1" >> api/.env

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3.2"
          extensions: mbstring, xml, ctype, json, bcmath, curl
          tools: composer:v2

      - name: Install Dependencies
        run: |
          cd api
          composer install --prefer-dist --no-progress --no-suggest

      - name: Generate key
        run: |
          cd api
          php artisan key:generate

      - name: Directory Permissions
        run: |
          cd api
          chmod -R 777 storage bootstrap/cache

      - name: Run Migrations
        run: |
          cd api
          php artisan migrate --force

      - name: Execute Tests
        run: |
          cd api
          php artisan test

      - name: Check Coding Standards
        run: |
          cd api
          ./vendor/bin/phpcs --standard=PSR12 app/

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.USER }}@${{ secrets.HOST }} << 'EOF'
            cd /var/www/html/GitHub-Actions-Laravel11-React18-Vite-Docker
            git pull origin master
            sudo docker-compose down
            sudo docker-compose up -d --build
            sudo docker-compose exec api composer install --no-dev --optimize-autoloader
            sudo docker-compose exec api php artisan migrate --force
            sudo docker-compose exec api php artisan config:cache
          EOF